apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdk buildConfig.compileSdk

    defaultConfig {
        applicationId "com.appsfactory.testtask"
        minSdk buildConfig.minSdk
        targetSdk buildConfig.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "LASTFM_API_KEY", "\"" + propOrDef("LASTFM_API_KEY", "") + "\""
        buildConfigField "String", "LASTFM_CLIENT_SECRET", "\"" + propOrDef("LASTFM_CLIENT_SECRET", "") + "\""
        buildConfigField "String", "LASTFM_BASE_URL", "\"" + propOrDef("LASTFM_BASE_URL", "") + "\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/*.version'
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

dependencies {
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
    implementation "androidx.core:core-ktx:${versions.androidx.core_ktx}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-bom:1.6.4"

//    implementation "—Åom.jakewharton.timber:timber:${versions.timber}"
    implementation("com.jakewharton.timber:timber:5.0.1")

    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"

    implementation "androidx.lifecycle:lifecycle-extensions:${versions.androidx.lifecycle_ext}"
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:${versions.androidx.lifecycle}")
    implementation("androidx.lifecycle:lifecycle-common-java8:${versions.androidx.lifecycle}")
    kapt "androidx.lifecycle:lifecycle-compiler:${versions.androidx.lifecycle}"

    implementation "androidx.paging:paging-runtime-ktx:${versions.androidx.paging}"

    implementation "androidx.appcompat:appcompat:${versions.androidx.appcompat}"
    implementation "com.google.android.material:material:${versions.material_design}"
    implementation "androidx.recyclerview:recyclerview:${versions.androidx.recyclerview}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.androidx.constraint_layout}"

    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    implementation "androidx.navigation:navigation-runtime-ktx:${versions.androidx.navigation}"
    implementation "androidx.navigation:navigation-fragment-ktx:${versions.androidx.navigation}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation "androidx.paging:paging-common-ktx:${versions.androidx.paging}"
    implementation "androidx.room:room-common:${versions.androidx.room}"
    implementation "androidx.room:room-runtime:${versions.androidx.room}"
    kapt "androidx.room:room-compiler:${versions.androidx.room}"


    androidTestImplementation "androidx.room:room-runtime:${versions.androidx.room}"

    testImplementation "junit:junit:${versions.testing.junit}"
    testImplementation "org.mockito.kotlin:mockito-kotlin:${versions.testing.mockito_kotlin}"
    testImplementation "org.mockito.mockito-android:${versions.testing.mockito_android}"
    testImplementation "org.mockito:mockito-core:${versions.testing.mockito_android}"
}